Index: app/src/main/java/com/group25/ecommercefashionapp/ViewProductActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group25.ecommercefashionapp;\n\nimport android.content.Intent;\nimport android.graphics.Paint;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.RatingBar;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.view.menu.ActionMenuItemView;\nimport androidx.core.text.HtmlCompat;\nimport androidx.recyclerview.widget.GridLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.google.android.material.appbar.MaterialToolbar;\nimport com.group25.ecommercefashionapp.adapter.ProductColorAdapter;\nimport com.group25.ecommercefashionapp.adapter.ProductImageCarouselAdapter;\nimport com.group25.ecommercefashionapp.adapter.ProductSizeAdapter;\nimport com.group25.ecommercefashionapp.data.Item;\nimport com.group25.ecommercefashionapp.data.Product;\nimport com.group25.ecommercefashionapp.layoutmanager.GridAutoFitLayoutManager;\nimport com.group25.ecommercefashionapp.repository.ProductRepository;\n\nimport java.text.DecimalFormat;\nimport java.text.DecimalFormatSymbols;\nimport java.util.ArrayList;\nimport java.util.List;\n\n\npublic class ViewProductActivity extends AppCompatActivity implements OnItemClickListener{\n    MaterialToolbar toolbar;\n    MainActivity mainActivity;\n    TextView txtName, txtActualPrice, txtDiscountPrice, txtId, txtHighlight, txtRating, txtReview, selectedColorTextView, selectedSizeTextView;\n    private final DecimalFormatSymbols symbols = new DecimalFormatSymbols();\n    RatingBar ratingBar;\n    ActionMenuItemView cart;\n    RecyclerView colorRecyclerView, sizeRecyclerView;\n\n    ViewPager productCarousel;\n    private DecimalFormat VNDFormat;\n    ActionMenuItemView share;\n\n\n    ProductRepository productRepository;\n    Product product;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_product);\n        symbols.setGroupingSeparator('.');\n        VNDFormat = new DecimalFormat(\"###,###,###,###\", symbols);\n\n        productRepository = MyApp.getMainActivityInstance().productRepository;\n        Bundle bundle = getIntent().getExtras();\n        int id = bundle.getInt(\"id\");\n        product = productRepository.getProductById(id);\n\n        mainActivity = MyApp.getMainActivityInstance();\n\n        initializeViews();\n\n        txtName.setText(product.getName());\n        txtHighlight.setText(product.getDescription());\n        txtActualPrice.setText(getString(R.string.product_price, VNDFormat.format(product.getPrice())));\n        txtActualPrice.setPaintFlags(txtActualPrice.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\n        txtDiscountPrice.setText(getString(R.string.product_price, VNDFormat.format(product.getPrice() * 0.9f)));\n        txtId.setText(getString(R.string.product_id, String.valueOf(bundle.getInt(\"id\"))));\n        float rating = 3.8f;\n        ratingBar.setRating(rating);\n        txtRating.setText(String.valueOf(rating));\n        txtReview.setText(HtmlCompat.fromHtml(\"<font color=\\\"blue\\\"><u>(See 5 reviews)</u></font>\", HtmlCompat.FROM_HTML_MODE_LEGACY));\n        List<Integer> imageList = new ArrayList<>();\n        imageList.add(product.getImage());\n        imageList.add(product.getImage());\n        imageList.add(product.getImage());\n        imageList.add(product.getImage());\n\n        ProductImageCarouselAdapter productImageCarouselAdapter = new ProductImageCarouselAdapter(this, imageList, this);\n        productCarousel.setAdapter(productImageCarouselAdapter);\n        share.setOnClickListener(v -> shareContent());\n\n        // Set up Color recycler view\n        GridAutoFitLayoutManager colorGridLayoutManager = new GridAutoFitLayoutManager(this, 0, GridLayoutManager.HORIZONTAL, false);\n        colorRecyclerView.setLayoutManager(colorGridLayoutManager);\n        ProductColorAdapter colorAdapter = new ProductColorAdapter(product.getColorList(), this, colorRecyclerView);\n        colorRecyclerView.setAdapter(colorAdapter);\n\n\n        // Set up Size recycler view\n        GridAutoFitLayoutManager sizeGridLayoutManager = new GridAutoFitLayoutManager(this, 0, GridLayoutManager.HORIZONTAL, false);\n        sizeRecyclerView.setLayoutManager(sizeGridLayoutManager);\n        ProductSizeAdapter sizeAdapter = new ProductSizeAdapter(product.getSizeList(), this, sizeRecyclerView);\n        sizeRecyclerView.setAdapter(sizeAdapter);\n\n        toolbar.setNavigationOnClickListener(v -> {\n            mainActivity.navController.popBackStack();\n            onBackPressed();\n\n        });\n    }\n\n    private void shareContent() {\n        // Create an Intent to share content\n        Intent shareIntent = new Intent(Intent.ACTION_SEND);\n        shareIntent.setType(\"text/plain\");\n        String shareBody = product.getName() + \"\\n\" + getString(R.string.product_price, VNDFormat.format(product.getPrice() * 0.9f));\n        shareIntent.putExtra(Intent.EXTRA_TEXT, shareBody);\n\n        // Start the activity for sharing\n        startActivity(Intent.createChooser(shareIntent, getString(R.string.share)));\n    }\n\n    @Override\n    public void onItemClick(View view, Item item) {\n        if (view.getId() == R.id.chip_image_card) {\n            selectedColorTextView.setText( item.getName());\n        } else if (view.getId() == R.id.chip_size_card) {\n            selectedSizeTextView.setText(item.getName());\n        }\n    }\n\n    private void initializeViews() {\n        txtName = findViewById(R.id.productNameTextView);\n        txtHighlight = findViewById(R.id.productHighlightsTextView);\n        txtActualPrice = findViewById(R.id.productActualPriceTextView);\n        txtDiscountPrice = findViewById(R.id.productDiscountPriceTextView);\n        txtRating = findViewById(R.id.ratingTextView);\n        txtReview = findViewById(R.id.seeReviewsTextView);\n        ratingBar = findViewById(R.id.ratingBar);\n        txtId = findViewById(R.id.productIDTextView);\n        productCarousel = findViewById(R.id.carousel);\n        toolbar = findViewById(R.id.topAppBar);\n        share = toolbar.findViewById(R.id.share);\n        cart = toolbar.findViewById(R.id.cart);\n        selectedColorTextView = findViewById(R.id.selectColorText);\n        colorRecyclerView = findViewById(R.id.colorRecycler);\n        selectedSizeTextView = findViewById(R.id.selectSizeText);\n        sizeRecyclerView = findViewById(R.id.sizeRecycler);\n        toolbar = findViewById(R.id.topAppBar);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/ViewProductActivity.java b/app/src/main/java/com/group25/ecommercefashionapp/ViewProductActivity.java
--- a/app/src/main/java/com/group25/ecommercefashionapp/ViewProductActivity.java	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/ViewProductActivity.java	
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.graphics.Paint;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.RatingBar;
 import android.widget.TextView;
@@ -20,6 +21,7 @@
 import com.group25.ecommercefashionapp.adapter.ProductSizeAdapter;
 import com.group25.ecommercefashionapp.data.Item;
 import com.group25.ecommercefashionapp.data.Product;
+import com.group25.ecommercefashionapp.data.ProductImage;
 import com.group25.ecommercefashionapp.layoutmanager.GridAutoFitLayoutManager;
 import com.group25.ecommercefashionapp.repository.ProductRepository;
 
@@ -42,6 +44,7 @@
     private DecimalFormat VNDFormat;
     ActionMenuItemView share;
 
+    private static final int VIEW_PRODUCT_IMAGES_REQUEST_CODE = 1;
 
     ProductRepository productRepository;
     Product product;
@@ -58,6 +61,8 @@
         int id = bundle.getInt("id");
         product = productRepository.getProductById(id);
 
+
+
         mainActivity = MyApp.getMainActivityInstance();
 
         initializeViews();
@@ -72,11 +77,7 @@
         ratingBar.setRating(rating);
         txtRating.setText(String.valueOf(rating));
         txtReview.setText(HtmlCompat.fromHtml("<font color=\"blue\"><u>(See 5 reviews)</u></font>", HtmlCompat.FROM_HTML_MODE_LEGACY));
-        List<Integer> imageList = new ArrayList<>();
-        imageList.add(product.getImage());
-        imageList.add(product.getImage());
-        imageList.add(product.getImage());
-        imageList.add(product.getImage());
+        List<ProductImage> imageList = mainActivity.productRepository.getProductById(id).getImageList();
 
         ProductImageCarouselAdapter productImageCarouselAdapter = new ProductImageCarouselAdapter(this, imageList, this);
         productCarousel.setAdapter(productImageCarouselAdapter);
@@ -119,6 +120,30 @@
             selectedColorTextView.setText( item.getName());
         } else if (view.getId() == R.id.chip_size_card) {
             selectedSizeTextView.setText(item.getName());
+        }else if(view.getId() == R.id.carousel_image_view){
+            Bundle bundle = new Bundle();
+            bundle.putInt("product_id", product.getId());
+            bundle.putInt("position", productCarousel.getCurrentItem());
+            Intent intent = new Intent(this, ViewProductImages.class);
+            intent.putExtras(bundle);
+            startActivityForResult(intent, VIEW_PRODUCT_IMAGES_REQUEST_CODE);
+        }
+    }
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == VIEW_PRODUCT_IMAGES_REQUEST_CODE) {
+            if (resultCode == RESULT_OK) {
+                Bundle bundle = data.getExtras();
+                int id = bundle.getInt("product_id");
+                int position = bundle.getInt("position");
+                Product product = mainActivity.productRepository.getProductById(id);
+                ProductImageCarouselAdapter productImageCarouselAdapter = new ProductImageCarouselAdapter(this, product.getImageList(), this);
+                productCarousel.setAdapter(productImageCarouselAdapter);
+                Log.d("position", String.valueOf(position)+ " " + productCarousel.getCurrentItem());
+                productCarousel.setCurrentItem(position);
+                Log.d("position", String.valueOf(position)+ " " + productCarousel.getCurrentItem());
+            }
         }
     }
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <application\n        android:name=\".MyApp\"\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n\t\tandroid:fullBackupContent=\"@xml/backup_rules\"\n\t\tandroid:icon=\"@mipmap/ic_launcher\"\n\t\tandroid:label=\"@string/app_name\"\n\t\tandroid:roundIcon=\"@mipmap/ic_launcher_round\"\n\t\tandroid:supportsRtl=\"true\"\n\t\tandroid:theme=\"@style/Theme.EcommerceFashionApp\"\n\t\ttools:targetApi=\"31\">\n\t\n\t\t<activity\n\t\t\tandroid:name=\".MainActivity\"\n\t\t\tandroid:exported=\"true\">\n\t\t\t<intent-filter>\n\t\t\t\t<action android:name=\"android.intent.action.MAIN\" />\n\t\t\t\n\t\t\t\t<category android:name=\"android.intent.category.LAUNCHER\" />\n\t\t\t</intent-filter>\n\t\t</activity>\n\t\t<activity android:name=\".ViewProductActivity\"\n\t\t\tandroid:exported=\"false\">\n\t\t\t\n\t\t</activity>\n\t\t<meta-data\n\t\t\tandroid:name=\"preloaded_fonts\"\n\t\t\tandroid:resource=\"@array/preloaded_fonts\" />\n\t</application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -26,6 +26,9 @@
 		<activity android:name=".ViewProductActivity"
 			android:exported="false">
 			
+		</activity>
+		<activity android:name=".ViewProductImages"
+			android:exported="false">
 		</activity>
 		<meta-data
 			android:name="preloaded_fonts"
Index: app/src/main/java/com/group25/ecommercefashionapp/data/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group25.ecommercefashionapp.data;\n\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Product extends Item {\n    private final int id;\n    private final String description;\n    private final Integer price;\n    private final int imageId;\n    private final String category;\n    private final Integer availableQuantity;\n    private final List<ProductColor> colorList = new ArrayList<>();\n    private final List<ProductSize> sizeList = new ArrayList<>();\n\n    public Product(Integer id, String name, String description, Integer price, int imageId, String category, Integer availableQuantity) {\n        super(name);\n        this.id = id;\n        this.description = description;\n        this.price = price;\n        this.imageId = imageId;\n        this.category = category;\n        this.availableQuantity = availableQuantity;\n    }\n\n    public Product(String description, Integer price, int imageId, String category) {\n        super(\"\");\n        this.description = description;\n        this.price = price;\n        this.imageId = imageId;\n        this.id = -1;\n        this.category = category;\n        this.availableQuantity = 0;\n\n    }\n\n    public Product(String name, String description, Integer price, int imageId, String category) {\n        super(name);\n        this.description = description;\n        this.price = price;\n        this.imageId = imageId;\n        this.id = -1;\n        this.category = category;\n        this.availableQuantity = 0;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public Integer getPrice() {\n        return price;\n    }\n\n    public Integer getImage() {\n        return imageId;\n    }\n\n    public String getCategory() {\n        return category;\n    }\n\n    public Integer getAvailableQuantity() {\n        return availableQuantity;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public List<String> getColors() {\n        List<String> colors = new ArrayList<>();\n        for (ProductColor color : colorList) {\n            colors.add(color.getHexColor());\n        }\n        return colors;\n    }\n\n    public List<ProductColor> getColorList() {\n        return colorList;\n    }\n\n    public void addColor(ProductColor color) {\n        colorList.add(color);\n    }\n\n    public void addColors(List<ProductColor> colors) {\n        colorList.addAll(colors);\n    }\n\n    public List<ProductSize> getSizeList() {\n        return sizeList;\n    }\n\n    public List<String> getSizes() {\n        List<String> sizes = new ArrayList<>();\n        for (ProductSize size : sizeList) {\n            sizes.add(size.getName());\n        }\n        return sizes;\n    }\n\n    public void addSize(ProductSize size) {\n        sizeList.add(size);\n    }\n\n    public void addSizes(List<ProductSize> sizes) {\n        sizeList.addAll(sizes);\n    }\n\n    @Override\n    public boolean equals(Object object){\n        if (this == object) return true;\n        if (object == null || getClass() != object.getClass()) return false;\n        Product product = (Product) object;\n        return id == product.id;\n    }\n    public String getSizeRange() {\n        String sizeRange = \"\";\n        if (sizeList.size() > 0) {\n            sizeRange = sizeList.get(0).getName();\n            if (sizeList.size() > 1) {\n                sizeRange += \" - \" + sizeList.get(sizeList.size() - 1).getName();\n            }\n        }\n        return sizeRange;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/data/Product.java b/app/src/main/java/com/group25/ecommercefashionapp/data/Product.java
--- a/app/src/main/java/com/group25/ecommercefashionapp/data/Product.java	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/data/Product.java	
@@ -8,38 +8,35 @@
     private final int id;
     private final String description;
     private final Integer price;
-    private final int imageId;
     private final String category;
     private final Integer availableQuantity;
+    private final List<ProductImage> imageList = new ArrayList<>();
     private final List<ProductColor> colorList = new ArrayList<>();
     private final List<ProductSize> sizeList = new ArrayList<>();
 
-    public Product(Integer id, String name, String description, Integer price, int imageId, String category, Integer availableQuantity) {
+    public Product(Integer id, String name, String description, Integer price, String category, Integer availableQuantity) {
         super(name);
         this.id = id;
         this.description = description;
         this.price = price;
-        this.imageId = imageId;
         this.category = category;
         this.availableQuantity = availableQuantity;
     }
 
-    public Product(String description, Integer price, int imageId, String category) {
+    public Product(String description, Integer price, String category) {
         super("");
         this.description = description;
         this.price = price;
-        this.imageId = imageId;
         this.id = -1;
         this.category = category;
         this.availableQuantity = 0;
 
     }
 
-    public Product(String name, String description, Integer price, int imageId, String category) {
+    public Product(String name, String description, Integer price, String category) {
         super(name);
         this.description = description;
         this.price = price;
-        this.imageId = imageId;
         this.id = -1;
         this.category = category;
         this.availableQuantity = 0;
@@ -57,8 +54,8 @@
         return price;
     }
 
-    public Integer getImage() {
-        return imageId;
+    public List<ProductImage> getImageList() {
+        return imageList;
     }
 
     public String getCategory() {
@@ -130,5 +127,8 @@
         }
         return sizeRange;
     }
+    public void addImages(List<ProductImage> images) {
+        imageList.addAll(images);
+    }
 
 }
Index: app/src/main/res/layout/activity_view_product_images.xml
===================================================================
diff --git a/app/src/main/res/layout/activity_view_product_images.xml b/app/src/main/res/layout/activity_view_product_images.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/activity_view_product_images.xml	
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+	xmlns:app="http://schemas.android.com/apk/res-auto"
+	android:layout_width="match_parent"
+	android:layout_height="match_parent"
+	android:orientation="vertical">
+	
+	<com.google.android.material.appbar.AppBarLayout
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:fitsSystemWindows="true"
+		android:stateListAnimator="@animator/appbar_elevation">
+		
+		<com.google.android.material.appbar.MaterialToolbar
+			android:id="@+id/topAppBar"
+			style="Widget.MaterialComponents.Toolbar.PrimarySurface"
+			android:layout_width="match_parent"
+			android:layout_height="?attr/actionBarSize"
+			app:navigationIcon="@drawable/round_arrow_back_24"
+			app:title="" />
+	
+	</com.google.android.material.appbar.AppBarLayout>
+	
+	<androidx.core.widget.NestedScrollView
+		android:id="@+id/nestedScrollView"
+		android:layout_width="match_parent"
+		android:layout_height="match_parent"
+		android:fillViewport="true"
+		android:fitsSystemWindows="true"
+		android:overScrollMode="never"
+		android:scrollbars="none"
+		app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior">
+		
+		<LinearLayout
+			android:layout_width="match_parent"
+			android:layout_height="match_parent"
+			android:orientation="vertical">
+			
+			<View
+				android:layout_width="match_parent"
+				android:layout_height="100dp">
+			
+			</View>
+			
+			<androidx.viewpager.widget.ViewPager
+				android:id="@+id/carousel"
+				android:layout_width="match_parent"
+				android:layout_height="match_parent"
+				android:orientation="horizontal"
+				app:layout_constraintBottom_toBottomOf="parent">
+			
+			</androidx.viewpager.widget.ViewPager>
+		</LinearLayout>
+	</androidx.core.widget.NestedScrollView>
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!-- nav_graph.xml -->\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\txmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\txmlns:tools=\"http://schemas.android.com/tools\"\n\tapp:startDestination=\"@id/homeBotNav\">\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/homeBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.home.HomeFragment\"\n\t\tandroid:label=\"Home Fragment\"\n\t\ttools:layout=\"@layout/home\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/categoryBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.category.CategoryFragment\"\n\t\tandroid:label=\"Category Fragment\"\n\t\ttools:layout=\"@layout/category\">\n\t\t<action\n\t\t\tandroid:id=\"@+id/action_categoryBotNav_to_filterCategory\"\n\t\t\tapp:destination=\"@id/filterCategory\"\n\t\t\tapp:enterAnim=\"@android:anim/fade_in\"\n\t\t\tapp:exitAnim=\"@android:anim/fade_out\"\n\t\t\tapp:popEnterAnim=\"@android:anim/slide_in_left\"\n\t\t\tapp:popExitAnim=\"@android:anim/slide_out_right\" />\n\t</fragment>\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/cartBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.order.OrderFragment\"\n\t\tandroid:label=\"Favorite Fragment\"\n\t\ttools:layout=\"@layout/order\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/favoriteBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.favorite.FavoriteFragment\"\n\t\tandroid:label=\"Favorite Fragment\"\n\t\ttools:layout=\"@layout/fragment_favorite\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/membershipBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.membership.MembershipFragment\"\n\t\tandroid:label=\"Membership Fragment\"\n\t\ttools:layout=\"@layout/membership\">\n\t\t<action\n\t\t\tandroid:id=\"@+id/action_membershipBotNav_to_profileSettings\"\n\t\t\tapp:destination=\"@id/profileSettings\"\n\t\t\tapp:enterAnim=\"@android:anim/fade_in\"\n\t\t\tapp:exitAnim=\"@android:anim/fade_out\"\n\t\t\tapp:popEnterAnim=\"@android:anim/slide_in_left\"\n\t\t\tapp:popExitAnim=\"@android:anim/slide_out_right\" />\n\t\t<action\n\t\t\tandroid:id=\"@+id/action_membershipBotNav_to_settings\"\n\t\t\tapp:destination=\"@id/settings\"\n\t\t\tapp:enterAnim=\"@android:anim/fade_in\"\n\t\t\tapp:exitAnim=\"@android:anim/fade_out\"\n\t\t\tapp:popEnterAnim=\"@android:anim/slide_in_left\"\n\t\t\tapp:popExitAnim=\"@android:anim/slide_out_right\" />\n\t</fragment>\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/notificationBotNav\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.notification.NotificationFragment\"\n\t\tandroid:label=\"Notification Fragment\"\n\t\ttools:layout=\"@layout/notification\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/profileSettings\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.membership.ProfileSettingsFragment\"\n\t\tandroid:label=\"Profile Settings Fragment\"\n\t\ttools:layout=\"@layout/profile_settings\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/settings\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.membership.SettingsFragment\"\n\t\tandroid:label=\"Settings Fragment\"\n\t\ttools:layout=\"@layout/settings\" />\n\t\n\t<fragment\n\t\tandroid:id=\"@+id/filterCategory\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ui.fragment.category.CategoryFilteredFragment\"\n\t\tandroid:label=\"Filtered Category Fragment\"\n\t\ttools:layout=\"@layout/category_filtered\">\n\t\t<action\n\t\t\tandroid:id=\"@+id/action_filterCategory_to_viewProduct\"\n\t\t\tapp:destination=\"@id/viewProduct\"\n\t\t\tapp:enterAnim=\"@android:anim/fade_in\"\n\t\t\tapp:exitAnim=\"@android:anim/fade_out\"\n\t\t\tapp:popEnterAnim=\"@android:anim/slide_in_left\"\n\t\t\tapp:popExitAnim=\"@android:anim/slide_out_right\" />\n\t</fragment>\n\t<activity\n\t\tandroid:id=\"@+id/viewProduct\"\n\t\tandroid:name=\"com.group25.ecommercefashionapp.ViewProductActivity\"\n\t\tandroid:label=\"View Product Activity\"\n\t\ttools:layout=\"@layout/activity_view_product\" />\n\n</navigation>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
--- a/app/src/main/res/navigation/nav_graph.xml	
+++ b/app/src/main/res/navigation/nav_graph.xml	
@@ -94,4 +94,9 @@
 		android:label="View Product Activity"
 		tools:layout="@layout/activity_view_product" />
 
+	<activity
+		android:id="@+id/viewProductImages"
+		android:name="com.group25.ecommercefashionapp.ViewProductImages"
+		android:label="View Product Images"
+		tools:layout="@layout/activity_view_product_images" />
 </navigation>
Index: app/src/main/java/com/group25/ecommercefashionapp/ViewProductImages.java
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/ViewProductImages.java b/app/src/main/java/com/group25/ecommercefashionapp/ViewProductImages.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/ViewProductImages.java	
@@ -0,0 +1,70 @@
+package com.group25.ecommercefashionapp;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.viewpager.widget.ViewPager;
+
+import com.google.android.material.appbar.MaterialToolbar;
+import com.group25.ecommercefashionapp.adapter.ProductImageCarouselAdapter;
+import com.group25.ecommercefashionapp.adapter.ProductViewImageCarouselAdapter;
+import com.group25.ecommercefashionapp.data.Item;
+import com.group25.ecommercefashionapp.data.Product;
+
+public class ViewProductImages extends AppCompatActivity {
+    ViewPager productCarousel;
+    MaterialToolbar toolbar;
+    MainActivity mainActivity;
+    int positionFinal = 0;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_view_product_images);
+
+        mainActivity = MyApp.getMainActivityInstance();
+
+        productCarousel = findViewById(R.id.carousel);
+        toolbar = findViewById(R.id.topAppBar);
+
+
+        Bundle bundle = getIntent().getExtras();
+        int id = bundle.getInt("product_id");
+        int position = bundle.getInt("position");
+        Product product = mainActivity.productRepository.getProductById(id);
+
+        ProductViewImageCarouselAdapter productImageCarouselAdapter = new ProductViewImageCarouselAdapter(this, product.getImageList());
+        productCarousel.setAdapter(productImageCarouselAdapter);
+        productCarousel.setCurrentItem(position);
+        productCarousel.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
+            @Override
+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+            }
+
+            @Override
+            public void onPageSelected(int position) {
+                // Update positionFinal when the page is selected
+                positionFinal = position;
+            }
+
+            @Override
+            public void onPageScrollStateChanged(int state) {
+            }
+        });
+        toolbar.setNavigationOnClickListener(v -> {
+            Log.d("ViewProductImages", "onCreate: " + positionFinal);
+            Bundle bundle1 = new Bundle();
+            bundle1.putInt("product_id", id);
+            bundle1.putInt("position", positionFinal);
+
+            Intent intent = new Intent();
+            intent.putExtras(bundle1);
+
+            setResult(RESULT_OK, intent);
+            finish();
+        });
+    }
+
+}
Index: app/src/main/java/com/group25/ecommercefashionapp/data/ProductImage.java
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/data/ProductImage.java b/app/src/main/java/com/group25/ecommercefashionapp/data/ProductImage.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/data/ProductImage.java	
@@ -0,0 +1,33 @@
+package com.group25.ecommercefashionapp.data;
+
+public class ProductImage extends Item {
+    private final int product_id;
+    private final int image_int_id;
+    private final int image_id;
+
+    public ProductImage(int product_id, int image_int_id, int image_id) {
+        super("");
+        this.product_id = product_id;
+        this.image_int_id = image_int_id;
+        this.image_id = image_id;
+    }
+
+    public ProductImage(int product_id, int image_int_id, String name) {
+        super(name);
+        this.image_id = -1;
+        this.image_int_id = image_int_id;
+        this.product_id = product_id;
+    }
+
+    public int getProduct_id() {
+        return product_id;
+    }
+
+    public int getImage_int_id() {
+        return image_int_id;
+    }
+    public int getImage_id() {
+        return image_id;
+    }
+
+}
Index: app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductViewImageCarouselAdapter.java
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductViewImageCarouselAdapter.java b/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductViewImageCarouselAdapter.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductViewImageCarouselAdapter.java	
@@ -0,0 +1,64 @@
+package com.group25.ecommercefashionapp.adapter;
+
+import android.content.Context;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.ImageView;
+import android.widget.TextView;
+import androidx.viewpager.widget.PagerAdapter;
+
+import com.group25.ecommercefashionapp.R;
+import com.group25.ecommercefashionapp.data.ProductImage;
+
+import java.util.List;
+
+public class ProductViewImageCarouselAdapter extends PagerAdapter {
+
+    private final Context context;
+    private final List<ProductImage> imageList;
+
+
+    public ProductViewImageCarouselAdapter(Context context, List<ProductImage> imageList) {
+        this.context = context;
+        this.imageList = imageList;
+    }
+
+    @NonNull
+    @Override
+    public Object instantiateItem(@NonNull ViewGroup container, int position) {
+        LayoutInflater inflater = LayoutInflater.from(context);
+        View itemView = inflater.inflate(R.layout.view_product_carousel_item, container, false);
+
+        // Customize the item view based on your requirements
+        // For example, you can set text or images here
+        ImageView image = itemView.findViewById(R.id.carousel_image_view);
+        TextView currentImageTextView = itemView.findViewById(R.id.current_image_indicator_text_view);
+        TextView totalImageTextView = itemView.findViewById(R.id.image_size_indicator_text_view);
+
+        currentImageTextView.setText(String.valueOf(position + 1));
+        totalImageTextView.setText(String.valueOf(imageList.size()));
+        image.setImageResource(imageList.get(position).getImage_int_id());
+
+        container.addView(itemView);
+        return itemView;
+    }
+
+    @Override
+    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {
+        container.removeView((View) object);
+    }
+
+    @Override
+    public int getCount() {
+        return imageList.size();
+    }
+
+    @Override
+    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
+        return view == object;
+    }
+}
Index: app/src/main/res/layout/view_product_carousel_item.xml
===================================================================
diff --git a/app/src/main/res/layout/view_product_carousel_item.xml b/app/src/main/res/layout/view_product_carousel_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/view_product_carousel_item.xml	
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+	xmlns:app="http://schemas.android.com/apk/res-auto"
+	android:id="@+id/carousel_item_container"
+	android:layout_width="match_parent"
+	android:layout_height="wrap_content"
+	android:foreground="?attr/selectableItemBackground"
+	android:orientation="vertical"
+	app:shapeAppearance="?attr/shapeAppearanceCornerExtraLarge">
+	
+	<com.google.android.material.imageview.ShapeableImageView
+		android:id="@+id/carousel_image_view"
+		android:layout_width="match_parent"
+		android:layout_height="@dimen/product_image_size"
+		android:scaleType="centerCrop"
+		app:layout_constraintEnd_toEndOf="parent"
+		app:layout_constraintStart_toStartOf="parent"
+		app:layout_constraintTop_toTopOf="parent"
+		app:srcCompat="@drawable/man_beige_shirt_pants_casual_wear_fashion" />
+	
+	<LinearLayout
+		android:layout_width="wrap_content"
+		android:layout_height="@dimen/product_image_indicator_height"
+		android:layout_margin="40dp"
+		android:background="@color/carousel_indicator_selected"
+		android:gravity="center"
+		android:orientation="horizontal"
+		app:layout_constraintBottom_toBottomOf="parent"
+		app:layout_constraintEnd_toEndOf="parent"
+		app:layout_constraintStart_toStartOf="parent"
+		app:layout_constraintTop_toBottomOf="@id/carousel_image_view">
+		
+		<TextView
+			android:id="@+id/current_image_indicator_text_view"
+			android:layout_width="wrap_content"
+			android:layout_height="wrap_content"
+			android:layout_gravity="center"
+			android:paddingStart="@dimen/product_image_indicator_text_padding"
+			android:paddingEnd="@dimen/product_image_indicator_text_padding"
+			android:textColor="@color/primary_white"
+			android:textSize="@dimen/product_image_indicator_text_size" />
+		
+		<View
+			android:id="@+id/vertical_bar"
+			android:layout_width="@dimen/product_image_indicator_vertical_bar_width"
+			android:layout_height="match_parent"
+			android:layout_gravity="center"
+			android:layout_marginTop="@dimen/product_image_indicator_vertical_bar_margin"
+			android:layout_marginBottom="@dimen/product_image_indicator_vertical_bar_margin"
+			android:background="@color/primary_white" />
+		
+		<TextView
+			android:id="@+id/image_size_indicator_text_view"
+			android:layout_width="wrap_content"
+			android:layout_height="wrap_content"
+			android:layout_gravity="center"
+			android:paddingStart="@dimen/product_image_indicator_text_padding"
+			android:paddingEnd="@dimen/product_image_indicator_text_padding"
+			android:textColor="@color/primary_white"
+			android:textSize="@dimen/product_image_indicator_text_size" />
+	</LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/java/com/group25/ecommercefashionapp/database/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group25.ecommercefashionapp.database;\n\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteOpenHelper;\n\npublic class DatabaseHelper extends SQLiteOpenHelper {\n\n    private static final String DATABASE_NAME = \"ecommerce_db\";\n    private static final int DATABASE_VERSION = 1;\n\n    // Define the Product table schema\n    private static final String CREATE_PRODUCT_TABLE =\n            \"CREATE TABLE IF NOT EXISTS \" + ProductContract.ProductEntry.TABLE_NAME + \" (\" +\n                    ProductContract.ProductEntry.COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    ProductContract.ProductEntry.COLUMN_NAME + \" TEXT,\" +\n                    ProductContract.ProductEntry.COLUMN_DESCRIPTION + \" TEXT,\" +\n                    ProductContract.ProductEntry.COLUMN_PRICE + \" INT,\" +\n                    ProductContract.ProductEntry.COLUMN_IMAGE + \" INT,\" +\n                    ProductContract.ProductEntry.COLUMN_CATEGORY + \" TEXT,\" +\n                    ProductContract.ProductEntry.COLUMN_AVAILABLE_QUANTITY + \" INT)\";\n\n    private static final String CREATE_COLOR_TABLE =\n            \"CREATE TABLE IF NOT EXISTS \" + ProductContract.ColorEntry.TABLE_NAME + \" (\" +\n                    ProductContract.ColorEntry.COLUMN_PRODUCT_ID + \" INT,\" +\n                    ProductContract.ColorEntry.COLUMN_HEX_COLOR + \" TEXT,\" +\n                    ProductContract.ColorEntry.COLUMN_COLOR_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"UNIQUE (\" + ProductContract.ColorEntry.COLUMN_PRODUCT_ID + \", \" + ProductContract.ColorEntry.COLUMN_HEX_COLOR + \"),\" +\n                    \"FOREIGN KEY (\" + ProductContract.ColorEntry.COLUMN_PRODUCT_ID + \") REFERENCES \" + ProductContract.ProductEntry.TABLE_NAME + \"(\" + ProductContract.ProductEntry.COLUMN_ID + \"))\";\n\n    private static final String CREATE_SIZE_TABLE =\n            \"CREATE TABLE IF NOT EXISTS \" + ProductContract.SizeEntry.TABLE_NAME + \" (\" +\n                    ProductContract.SizeEntry.COLUMN_PRODUCT_ID + \" INTEGER,\" +\n                    ProductContract.SizeEntry.COLUMN_SIZE + \" TEXT,\" +\n                    ProductContract.SizeEntry.COLUMN_SIZE_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT,\" +\n                    \"UNIQUE (\" + ProductContract.SizeEntry.COLUMN_PRODUCT_ID + \", \" + ProductContract.SizeEntry.COLUMN_SIZE + \"),\" +\n                    \"FOREIGN KEY (\" + ProductContract.SizeEntry.COLUMN_PRODUCT_ID + \") REFERENCES \" + ProductContract.ProductEntry.TABLE_NAME + \"(\" + ProductContract.ProductEntry.COLUMN_ID + \"))\";\n\n    private static final String CREATE_ORDER_TABLE =\n            \"CREATE TABLE IF NOT EXISTS \" + OrderContract.OrderEntry.TABLE_NAME + \" (\" +\n                    OrderContract.OrderEntry.COLUMN_ORDER_ID + \" INT, \" +\n                    OrderContract.OrderEntry.COLUMN_DATE + \" TEXT)\";\n\n    private static final String CREATE_ORDERDETAILS_TABLE =\n            \"CREATE TABLE IF NOT EXISTS \" + OrderDetailsContract.OrderDetailsEntry.TABLE_NAME + \" (\" +\n                    OrderDetailsContract.OrderDetailsEntry.COLUMN_ORDINAL_NUMBER + \" INT,\" +\n                    OrderDetailsContract.OrderDetailsEntry.COLUMN_ORDER_ID + \" INT,\" +\n                    OrderDetailsContract.OrderDetailsEntry.COLUMN_PRODUCT_ID + \" INT)\";\n\n    public DatabaseHelper(Context context) {\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n    }\n\n    // truy vấn không trả kết quả (create, insert,...)\n    public void NonQueryData(String sql) {\n        SQLiteDatabase database = getWritableDatabase();\n        database.execSQL(sql);\n    }\n\n    // truy vấn trả kết quả (select)\n    public Cursor QueryData(String sql) {\n        SQLiteDatabase database = getReadableDatabase();\n        return database.rawQuery(sql, null);\n    }\n\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        db.execSQL(CREATE_PRODUCT_TABLE);\n        db.execSQL(CREATE_ORDER_TABLE);\n        db.execSQL(CREATE_ORDERDETAILS_TABLE);\n        db.execSQL(CREATE_COLOR_TABLE);\n        db.execSQL(CREATE_SIZE_TABLE);\n    }\n\n    @Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        // Implement if needed when upgrading the database schema\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/database/DatabaseHelper.java b/app/src/main/java/com/group25/ecommercefashionapp/database/DatabaseHelper.java
--- a/app/src/main/java/com/group25/ecommercefashionapp/database/DatabaseHelper.java	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/database/DatabaseHelper.java	
@@ -17,7 +17,6 @@
                     ProductContract.ProductEntry.COLUMN_NAME + " TEXT," +
                     ProductContract.ProductEntry.COLUMN_DESCRIPTION + " TEXT," +
                     ProductContract.ProductEntry.COLUMN_PRICE + " INT," +
-                    ProductContract.ProductEntry.COLUMN_IMAGE + " INT," +
                     ProductContract.ProductEntry.COLUMN_CATEGORY + " TEXT," +
                     ProductContract.ProductEntry.COLUMN_AVAILABLE_QUANTITY + " INT)";
 
@@ -37,6 +36,14 @@
                     "UNIQUE (" + ProductContract.SizeEntry.COLUMN_PRODUCT_ID + ", " + ProductContract.SizeEntry.COLUMN_SIZE + ")," +
                     "FOREIGN KEY (" + ProductContract.SizeEntry.COLUMN_PRODUCT_ID + ") REFERENCES " + ProductContract.ProductEntry.TABLE_NAME + "(" + ProductContract.ProductEntry.COLUMN_ID + "))";
 
+    private static final String CREATE_PRODUCT_IMAGES_TABLE=
+            "CREATE TABLE IF NOT EXISTS " + ProductContract.ImageEntry.TABLE_NAME + " (" +
+                    ProductContract.ImageEntry.COLUMN_PRODUCT_ID + " INTEGER," +
+                    ProductContract.ImageEntry.COLUMN_IMAGE + " INT," +
+                    ProductContract.ImageEntry.COLUMN_IMAGE_ID + " INTEGER PRIMARY KEY AUTOINCREMENT," +
+                    "UNIQUE (" + ProductContract.ImageEntry.COLUMN_PRODUCT_ID + ", " + ProductContract.ImageEntry.COLUMN_IMAGE + ")," +
+                    "FOREIGN KEY (" + ProductContract.ImageEntry.COLUMN_PRODUCT_ID + ") REFERENCES " + ProductContract.ProductEntry.TABLE_NAME + "(" + ProductContract.ProductEntry.COLUMN_ID + "))";
+
     private static final String CREATE_ORDER_TABLE =
             "CREATE TABLE IF NOT EXISTS " + OrderContract.OrderEntry.TABLE_NAME + " (" +
                     OrderContract.OrderEntry.COLUMN_ORDER_ID + " INT, " +
@@ -71,6 +78,7 @@
         db.execSQL(CREATE_ORDERDETAILS_TABLE);
         db.execSQL(CREATE_COLOR_TABLE);
         db.execSQL(CREATE_SIZE_TABLE);
+        db.execSQL(CREATE_PRODUCT_IMAGES_TABLE);
     }
 
     @Override
Index: app/src/main/res/anim/move_down.xml
===================================================================
diff --git a/app/src/main/res/anim/move_down.xml b/app/src/main/res/anim/move_down.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/anim/move_down.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+
+	<translate
+		android:duration="200"
+		android:fromYDelta="0%"
+		android:toYDelta="100%" />
+</set>
\ No newline at end of file
Index: app/src/main/java/com/group25/ecommercefashionapp/database/ProductContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group25.ecommercefashionapp.database;\n\nimport android.provider.BaseColumns;\n\npublic final class ProductContract {\n\n    private ProductContract() {\n    }\n\n    public static class ProductEntry implements BaseColumns {\n        public static final String TABLE_NAME = \"Product\";\n        public static final String COLUMN_ID = \"id\";\n        public static final String COLUMN_NAME = \"name\";\n        public static final String COLUMN_DESCRIPTION = \"description\";\n        public static final String COLUMN_PRICE = \"price\";\n        public static final String COLUMN_IMAGE = \"image\";\n        public static final String COLUMN_CATEGORY = \"category\";\n        public static final String COLUMN_AVAILABLE_QUANTITY = \"available_quantity\";\n    }\n\n    public static class ColorEntry {\n        public static final String TABLE_NAME = \"ProductColor\";\n        public static final String COLUMN_PRODUCT_ID = \"product_id\";\n        public static final String COLUMN_HEX_COLOR = \"hex\";\n        public static final String COLUMN_COLOR_ID = \"color_id\";\n    }\n    public static class SizeEntry implements BaseColumns {\n        public static final String TABLE_NAME = \"ProductSize\";\n        public static final String COLUMN_PRODUCT_ID = \"product_id\";\n        public static final String COLUMN_SIZE = \"size\";\n        public static final String COLUMN_SIZE_ID = \"size_id\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/database/ProductContract.java b/app/src/main/java/com/group25/ecommercefashionapp/database/ProductContract.java
--- a/app/src/main/java/com/group25/ecommercefashionapp/database/ProductContract.java	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/database/ProductContract.java	
@@ -13,7 +13,6 @@
         public static final String COLUMN_NAME = "name";
         public static final String COLUMN_DESCRIPTION = "description";
         public static final String COLUMN_PRICE = "price";
-        public static final String COLUMN_IMAGE = "image";
         public static final String COLUMN_CATEGORY = "category";
         public static final String COLUMN_AVAILABLE_QUANTITY = "available_quantity";
     }
@@ -30,4 +29,10 @@
         public static final String COLUMN_SIZE = "size";
         public static final String COLUMN_SIZE_ID = "size_id";
     }
+    public static class ImageEntry implements BaseColumns {
+        public static final String TABLE_NAME = "ProductImages";
+        public static final String COLUMN_PRODUCT_ID = "product_id";
+        public static final String COLUMN_IMAGE = "image";
+        public static final String COLUMN_IMAGE_ID = "image_id";
+    }
 }
Index: app/src/main/java/com/group25/ecommercefashionapp/utilities/TranslateAnimationUtil.java
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/utilities/TranslateAnimationUtil.java b/app/src/main/java/com/group25/ecommercefashionapp/utilities/TranslateAnimationUtil.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/utilities/TranslateAnimationUtil.java	
@@ -0,0 +1,101 @@
+package com.group25.ecommercefashionapp.utilities;
+
+import android.content.Context;
+import android.view.GestureDetector;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.AnimationUtils;
+
+import com.group25.ecommercefashionapp.R;
+
+public class TranslateAnimationUtil implements View.OnTouchListener {
+    private final GestureDetector gestureDetector;
+
+    public TranslateAnimationUtil(Context context, View viewAnimation) {
+        gestureDetector = new GestureDetector(context, new SimpleGestureListener(viewAnimation));
+    }
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        return gestureDetector.onTouchEvent(event);
+    }
+
+    public static class SimpleGestureListener extends GestureDetector.SimpleOnGestureListener {
+        private static final int SCROLL_THRESHOLD = 10;
+        private final View viewAnimation;
+        private boolean isFinishAnimation = true;
+
+        public SimpleGestureListener(View viewAnimation) {
+            this.viewAnimation = viewAnimation;
+        }
+
+        @Override
+        public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
+            if (Math.abs(distanceY) > SCROLL_THRESHOLD) {
+                try {
+                    if (e2.getY() - e1.getY() < 0) {
+                        hiddenView();
+                    } else {
+                        showView();
+                    }
+                } catch (Exception ignored) {
+                }
+            }
+            return super.onScroll(e1, e2, distanceX, distanceY);
+        }
+
+        private void hiddenView() {
+            if (viewAnimation == null || viewAnimation.getVisibility() == View.GONE) {
+                return;
+            }
+            Animation animationDown = AnimationUtils.loadAnimation(viewAnimation.getContext(), R.anim.move_down);
+            animationDown.setAnimationListener(new Animation.AnimationListener() {
+                @Override
+                public void onAnimationStart(Animation animation) {
+                    viewAnimation.setVisibility(View.VISIBLE);
+                    isFinishAnimation = false;
+                }
+
+                @Override
+                public void onAnimationEnd(Animation animation) {
+                    viewAnimation.setVisibility(View.GONE);
+                    isFinishAnimation = true;
+                }
+
+                @Override
+                public void onAnimationRepeat(Animation animation) {
+                }
+            });
+            if (isFinishAnimation) {
+                viewAnimation.startAnimation(animationDown);
+            }
+        }
+
+        private void showView() {
+            if (viewAnimation == null || viewAnimation.getVisibility() == View.VISIBLE) {
+                return;
+            }
+            Animation animationUp = AnimationUtils.loadAnimation(viewAnimation.getContext(), R.anim.move_up);
+            animationUp.setAnimationListener(new Animation.AnimationListener() {
+                @Override
+                public void onAnimationStart(Animation animation) {
+                    viewAnimation.setVisibility(View.VISIBLE);
+                    isFinishAnimation = false;
+                }
+
+                @Override
+                public void onAnimationEnd(Animation animation) {
+                    isFinishAnimation = true;
+                }
+
+                @Override
+                public void onAnimationRepeat(Animation animation) {
+                }
+            });
+            if (isFinishAnimation) {
+                viewAnimation.startAnimation(animationUp);
+            }
+        }
+    }
+
+}
Index: app/src/main/res/anim/move_up.xml
===================================================================
diff --git a/app/src/main/res/anim/move_up.xml b/app/src/main/res/anim/move_up.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/anim/move_up.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+
+	<translate
+		android:duration="200"
+		android:fromYDelta="100%"
+		android:toYDelta="0%" />
+</set>
\ No newline at end of file
Index: app/src/main/java/com/group25/ecommercefashionapp/ui/behavior/BottomNavigationBehavior.java
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/ui/behavior/BottomNavigationBehavior.java b/app/src/main/java/com/group25/ecommercefashionapp/ui/behavior/BottomNavigationBehavior.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/ui/behavior/BottomNavigationBehavior.java	
@@ -0,0 +1,51 @@
+package com.group25.ecommercefashionapp.ui.behavior;
+
+import android.content.Context;
+
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.FrameLayout;
+
+import androidx.annotation.NonNull;
+import androidx.coordinatorlayout.widget.CoordinatorLayout;
+import androidx.core.view.ViewCompat;
+
+import com.google.android.material.bottomnavigation.BottomNavigationView;
+
+public class BottomNavigationBehavior extends CoordinatorLayout.Behavior<BottomNavigationView> {
+
+    public BottomNavigationBehavior() {
+        super();
+    }
+
+    public BottomNavigationBehavior(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    @Override
+    public boolean layoutDependsOn(@NonNull CoordinatorLayout parent, @NonNull BottomNavigationView child, @NonNull View dependency) {
+        return dependency instanceof FrameLayout;
+    }
+
+    @Override
+    public boolean onStartNestedScroll(@NonNull CoordinatorLayout coordinatorLayout, @NonNull BottomNavigationView child, @NonNull View directTargetChild, @NonNull View target, int nestedScrollAxes) {
+        return nestedScrollAxes == ViewCompat.SCROLL_AXIS_VERTICAL;
+    }
+
+    @Override
+    public void onNestedPreScroll(@NonNull CoordinatorLayout coordinatorLayout, @NonNull BottomNavigationView child, @NonNull View target, int dx, int dy, @NonNull int[] consumed) {
+        if (dy < 0) {
+            showBottomNavigationView(child);
+        } else if (dy > 0) {
+            hideBottomNavigationView(child);
+        }
+    }
+
+    private void hideBottomNavigationView(BottomNavigationView view) {
+        view.animate().translationY(view.getHeight());
+    }
+
+    private void showBottomNavigationView(BottomNavigationView view) {
+        view.animate().translationY(0);
+    }
+}
Index: app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductImageCarouselAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group25.ecommercefashionapp.adapter;\n\nimport android.content.Context;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport androidx.viewpager.widget.PagerAdapter;\n\nimport com.group25.ecommercefashionapp.OnItemClickListener;\nimport com.group25.ecommercefashionapp.R;\n\nimport java.util.List;\n\npublic class ProductImageCarouselAdapter extends PagerAdapter {\n\n    private final Context context;\n    private final List<Integer> imageList;\n    OnItemClickListener clickListener;\n\n    public ProductImageCarouselAdapter(Context context, List<Integer> imageList, OnItemClickListener clickListener) {\n        this.context = context;\n        this.imageList = imageList;\n        this.clickListener = clickListener;\n    }\n\n    @NonNull\n    @Override\n    public Object instantiateItem(@NonNull ViewGroup container, int position) {\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View itemView = inflater.inflate(R.layout.product_carousel_item, container, false);\n\n        // Customize the item view based on your requirements\n        // For example, you can set text or images here\n        ImageView image = itemView.findViewById(R.id.carousel_image_view);\n        TextView currentImageTextView = itemView.findViewById(R.id.current_image_indicator_text_view);\n        TextView totalImageTextView = itemView.findViewById(R.id.image_size_indicator_text_view);\n\n        currentImageTextView.setText(String.valueOf(position + 1));\n        totalImageTextView.setText(String.valueOf(imageList.size()));\n        image.setImageResource(imageList.get(position));\n\n        container.addView(itemView);\n        return itemView;\n    }\n\n    @Override\n    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {\n        container.removeView((View) object);\n    }\n\n    @Override\n    public int getCount() {\n        return imageList.size();\n    }\n\n    @Override\n    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {\n        return view == object;\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductImageCarouselAdapter.java b/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductImageCarouselAdapter.java
--- a/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductImageCarouselAdapter.java	
+++ b/app/src/main/java/com/group25/ecommercefashionapp/adapter/ProductImageCarouselAdapter.java	
@@ -1,6 +1,7 @@
 package com.group25.ecommercefashionapp.adapter;
 
 import android.content.Context;
+import android.os.Bundle;
 import android.view.ViewGroup;
 
 import androidx.annotation.NonNull;
@@ -13,16 +14,17 @@
 
 import com.group25.ecommercefashionapp.OnItemClickListener;
 import com.group25.ecommercefashionapp.R;
+import com.group25.ecommercefashionapp.data.ProductImage;
 
 import java.util.List;
 
 public class ProductImageCarouselAdapter extends PagerAdapter {
 
     private final Context context;
-    private final List<Integer> imageList;
+    private final List<ProductImage> imageList;
     OnItemClickListener clickListener;
 
-    public ProductImageCarouselAdapter(Context context, List<Integer> imageList, OnItemClickListener clickListener) {
+    public ProductImageCarouselAdapter(Context context, List<ProductImage> imageList, OnItemClickListener clickListener) {
         this.context = context;
         this.imageList = imageList;
         this.clickListener = clickListener;
@@ -42,7 +44,8 @@
 
         currentImageTextView.setText(String.valueOf(position + 1));
         totalImageTextView.setText(String.valueOf(imageList.size()));
-        image.setImageResource(imageList.get(position));
+        image.setImageResource(imageList.get(position).getImage_int_id());
+        image.setOnClickListener(v -> clickListener.onItemClick(v, imageList.get(position)));
 
         container.addView(itemView);
         return itemView;
@@ -62,4 +65,5 @@
     public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
         return view == object;
     }
+
 }
